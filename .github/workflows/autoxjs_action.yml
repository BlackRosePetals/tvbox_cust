name: 编译AutoXJs

on:
  schedule:
    - cron: 0 20 * * *
  workflow_dispatch:
    inputs:
      rebuild:
        description: '忽略构建记录以重新构建'
        required: false
        type: boolean
      donotpublish:
        description: '构建后不提交发布新版'
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - userName: aiselp
            repoName: AutoX
            branchName: setup-v7
            jdkVersion: 17

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check New Commit
        run: |
          upStream=https://github.com/${{ matrix.userName }}/${{ matrix.repoName }}
          echo "upStream=$upStream" >> $GITHUB_ENV
          commit=$(curl -sL $upStream/commits/${{ matrix.branchName }} |grep -o "/${{ matrix.userName }}/${{ matrix.repoName }}/commit/[a-z0-9]\+" |head -1 | cut -d\/ -f5)
          if [[ -z "${commit}" ]]; then
            commit=$(curl -s "https://api.github.com/repos/${{ matrix.userName }}/${{ matrix.repoName }}/commits/${{ matrix.branchName }}?per_page=1" | jq -r '.sha' )
          fi
          if ! grep -q "$commit" README.md || [ "${{ inputs.rebuild }}" == "true" ]; then
            echo "commit=$commit" >> $GITHUB_ENV
            echo "commitS=${commit:0:7}" >> $GITHUB_ENV
          fi
          echo "commit=$commit"

      - name: Checkout Source Code
        if: ${{ env.commit }}
        run: |
          git clone ${{ env.upStream }} TVBoxOSC
          cd TVBoxOSC
          git checkout ${{ env.commit }}
          echo "tag=$(git log --date=format:'%Y%m%d-%H%M' --pretty=format:%cd ${{ env.commitS }} -1)" >> $GITHUB_ENV

      - name: Compress Source Code
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          #zip -q -x ".git/*" -x  ".github/*" -r source-${{ env.commitS }}.zip .
          tar -cJf source-${{ env.commitS }}.tar.xz --exclude=.git --exclude=.github *

      - name: Setup JDK
        if: ${{ env.commit }}
        uses: actions/setup-java@main
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdkVersion }}

      - name: Setup Gradle
        if: ${{ env.commit }}
        uses: gradle/actions/setup-gradle@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - run: chmod 777 ./gradlew
      - name: Build JsModule
        run: |
          ./gradlew autojs:buildJsModule
      - name: Build Docs
        run: |
          pushd autojs/src/js-api
          npm install
          npm run docs
          popd
          rm -rf docs/v2/docs/nodejs/docs
          mv autojs/src/js-api/docs docs/v2/docs/nodejs/
          pushd docs/v2/
          npm install
          npm run build
          popd
          mkdir -p app/src/main/assets/docs/v2
          mv docs/v2/build/* app/src/main/assets/docs/v2/
      - name: Build inrt template
        run: |
          ./gradlew app:buildTemplateApp
      - name: Build App
        run: |
          ./gradlew app:assembleV7
      - uses: Tlaster/android-sign@v1.2.2
        name: Sign app APK
        with:
          releaseDirectory: |
            app/build/outputs/apk/v7/release
          signingKeyBase64: ${{ secrets.ASIGNING_KEY }}
          output: build/app/signed
          alias: ${{ secrets.AALIAS }}
          keyStorePassword: ${{ secrets.AKEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.AKEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"
      - name: rename apk
        run: |
          cd build/app/signed
          mv app-v7-arm64-v8a-release*.apk Autox-v7-arm64-v8a-release-${{steps.vars.outputs.short_ref}}.apk
          ls

      - name: Prepare App
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          rm -rf apk/
          mkdir -p apk/
          find ~ -type d -iname "release" -print0 | while IFS= read -r -d '' dir; do
            find "$dir" -type f -name "*.apk" -exec sh -c 'cp "$1" "apk/${{ matrix.userName }}-${{ matrix.repoName }}-${{ matrix.branchName }}-${1##*/}"' sh {} \;
          done

      - name: Release Note
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          lastCommit=$(grep "${{ matrix.userName }}\/${{ matrix.repoName }}\/${{ matrix.branchName }}" ${{ github.workspace }}/README.md |grep -o '[a-z0-9]\{40\}')
          export LESSCHARSET=utf-8
          echo -e "Credit: [${{ matrix.userName }}](${{ env.upStream }})\nCommit: ${{ env.commit }}\nChangelog:" > apk/${{ matrix.userName }}-Release.log
          if [ "${{ env.commit }}" == "${lastCommit}" ]; then
            git log --pretty=format:%B ${{ env.commitS }} -1 |sed -e "s# \{2,\}#\n#g" -e "/^Merge \(pull\|branch\|remote\)/d" -e '/^$/d' |cat -n |sort -k2,2 -k1,1n |uniq -f1 |sort -k1,1n |cut -f2- >> apk/${{ matrix.userName }}-Release.log
          else
            git log --pretty=format:%B ${{ env.commitS }}...${lastCommit:0:7} |sed -e "s# \{2,\}#\n#g" -e "/^Merge \(pull\|branch\|remote\)/d" -e '/^$/d' |cat -n |sort -k2,2 -k1,1n |uniq -f1 |sort -k1,1n |cut -f2- >> apk/${{ matrix.userName }}-Release.log
          fi

      - name: Upload App To Artifact
        uses: actions/upload-artifact@v4
        if: ${{ env.commit }}
        with:
          name: ${{ matrix.userName }}-${{ matrix.repoName }}-${{ matrix.branchName }}
          path: |
            TVBoxOSC/apk/*

      - name: Whether Or Not to Publish
        if: ${{ inputs.donotpublish && env.commit }}
        run: |
          echo "commit=" >> $GITHUB_ENV

      - name: Release and Upload Assets
        uses: ncipollo/release-action@main
        if: ${{ env.commit }}
        with:
          name: ${{ matrix.userName }}_${{ matrix.repoName }}_${{ matrix.branchName }}_${{ env.tag }}
          tag: ${{ matrix.userName }}_${{ matrix.repoName }}_${{ matrix.branchName }}_${{ env.tag }}
          bodyFile: TVBoxOSC/apk/${{ matrix.userName }}-Release.log
          allowUpdates: true
          removeArtifacts: true
          artifacts: |
            TVBoxOSC/apk/*.apk
            TVBoxOSC/source-${{ env.commitS }}.*

      - uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 5
          delete_tags: true
          delete_tag_pattern: ${{ matrix.userName }}_${{ matrix.repoName }}_${{ matrix.branchName }}.*
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

      - name: Push to master
        if: ${{ env.commit }}
        run: |
          rm -rf TVBoxOSC
          sed -i '/url =/d' ./.git/config
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url --add origin "https://${{ github.actor }}:${{ secrets.GIT_TOKEN }}@github.com/${{ github.repository }}"
          git pull --rebase
          sed -i "/${{ matrix.userName }}\/${{ matrix.repoName }}\/${{ matrix.branchName }}/s#Updated: [a-zA-Z0-9]*#Updated: ${{ env.commit }}#" README.md
          sed -i "s/update at .*/update at $(date '+%Y-%m-%d %H:%M:%S') UTC+0/" README.md
          git add --all
          git commit -m "${{ env.commit }}"
          git push -u -f origin master

  clean:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
